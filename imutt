#!/usr/bin/env bash

set -euo pipefail

TMPDIR="${TMPDIR:-/tmp}"

. muttrc-generator.bash

main() {
  local fifo aliasfile

  check_dependencies

  fifo="$(mktemp -u)"
  mkfifo "$fifo"

  aliasfile="$(mktemp "${TMPDIR}/mutt_aliases.XXXXXX")"

  get_aliases_from_lastpass > "${aliasfile}"
  generate_muttrc "${aliasfile}" > "$fifo" &
  best_mutt -F "$fifo" "${@}"
  put_aliases_in_lastpass < "${aliasfile}"
  rm "${aliasfile}"
}

check_dependencies() {
  if ! ( command -v mutt || command -v neomutt ) > /dev/null ; then
    fail "We need mutt or neomutt"
  fi

  for cmd in mktemp mkfifo lpass jq ; do
    if ! command -v "$cmd" > /dev/null ; then
      fail "We need $cmd"
    fi
  done
}

generate_muttrc() {
  local aliasfile template_file config_json
  aliasfile="${1:?"Expected an aliasfile in generate_muttrc"}"

  config_json="$(get_config_from_lastpass)"
  template_file="$(dirname "$0")/muttrc.tmpl"

  FULL_NAME="$(get_var_from_config "$config_json" "user-full-name")" \
  EMAIL="$(get_var_from_config "$config_json" "user-email-address")" \
  SMTP_ADDRESS="$(get_var_from_config "$config_json" "smtp-address")" \
  SMTP_PORT="$(get_var_from_config "$config_json" "smtp-port")" \
  SMTP_METHOD="$(get_var_from_config "$config_json" "smtp-method")" \
  IMAP_ADDRESS="$(get_var_from_config "$config_json" "imap-address")" \
  IMAP_PORT="$(get_var_from_config "$config_json" "imap-port")" \
  IMAP_METHOD="$(get_var_from_config "$config_json" "imap-method")" \
  FORCE_TLS="$(get_var_from_config "$config_json" "force-tls")" \
  USERNAME="$(get_var_from_config "$config_json" "username")" \
  PASSWORD="$(get_var_from_config "$config_json" "password")" \
  MAILBOXES="$(get_var_from_config "$config_json" "mailboxes")" \
  COLOUR_FILE="$(dirname "$0")/mutt/dracula.muttrc" \
  ALIAS_FILE="${aliasfile}" \
    bash "$template_file"

  make_mbox_hooks_from_mailboxes_list "$(get_var_from_config "$config_json" "mailboxes")"
}

best_mutt() {
  if command -v neomutt > /dev/null ; then
    neomutt "${@}"
  else
    mutt "${@}"
  fi
}

get_config_from_lastpass() {
  lpass show --notes Personal/email-creds
}

get_aliases_from_lastpass() {
  ensure_lastpass_has_aliases
  lpass show --notes Personal/email-aliases
}

put_aliases_in_lastpass() {
  lpass edit --notes Personal/email-aliases --non-interactive
}

ensure_lastpass_has_aliases() {
  if ! lpass ls Personal/email-aliases | grep email-aliases > /dev/null ; then
    echo "# vim: ft=muttrc" | lpass add --notes Personal/email-aliases --non-interactive
  fi
}

fail() {
  echo "${@}" >&2
  exit 1
}

main "${@}"
